services:
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
    container_name: dynamic_forms_client
    image: dynamic-forms-client
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    env_file:
      - ./client/.env.local
    command: ["npm", "run", "dev"]
    networks:
      - dynamic-forms
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: dynamic_forms_server
    image: dynamic-forms-server
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    ports:
      - "8000:8000"
    env_file:
      - ./server/.env
    volumes:
      - ./server:/app
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=base.settings
    depends_on:
      - db
      - celery
      - rabbitmq
    networks:
      - dynamic-forms
  db:
    image: postgres:16-alpine
    container_name: dynamic-forms-db
    env_file:
      - ./server/.env.postgres
    ports:
      - "5432:5432"
    volumes:
      - dynamicformsdb:/var/lib/postgresql/data
    networks:
      - dynamic-forms
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # broker
      - "15672:15672" # management UI
    networks:
      - dynamic-forms

  celery:
    build: ./server
    command: celery -A base worker -l info
    env_file:
      - ./server/.env
    volumes:
      - ./server:/app
    healthcheck:
      test: ["CMD", "celery", "-A", "base", "worker", "-l", "info"]
      interval: 5s
      retries: 5
      start_period: 10s
    depends_on:
      - db
      - rabbitmq
    networks:
      - dynamic-forms
    restart: unless-stopped

volumes:
  dynamicformsdb:

networks:
  dynamic-forms:
    driver: bridge
